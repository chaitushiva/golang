*** Keywords ***
All Pods In Namespace Are Running Or Succeeded
    [Arguments]    ${namespace}
    ${pods}=    Run Process    kubectl get pods -n ${namespace} --no-headers -o custom-columns=":status.phase"
    Log    ${pods.stdout}

    ${pod_statuses}=    Split String    ${pods.stdout}    \n
    FOR    ${status}    IN    @{pod_statuses}
        Should Contain Any    ${status}    Running    Succeeded
        ...    msg=Found pod in ${namespace} with unexpected status: ${status}
    END



*** Settings ***
Library    KubeLibrary

*** Keywords ***
All Pods In Namespace Are Running Or Succeeded
    [Arguments]    ${namespace}
    ${pods}=    Get Pods    namespace=${namespace}
    FOR    ${pod}    IN    @{pods}
        ${status}=    Get Pod Status    ${pod}    ${namespace}
        Should Contain Any    ${status}    Running    Succeeded
        ...    msg=Pod ${pod} in namespace ${namespace} is in unexpected state: ${status}
    END

Check All Pods In All Namespaces
    ${namespaces}=    Get Namespaces
    FOR    ${namespace}    IN    @{namespaces}
        Log    Checking namespace: ${namespace}
        All Pods In Namespace Are Running Or Succeeded    ${namespace}
    END

*** Settings ***
Library    KubeLibrary    kube_config=/root/.kube/config  # Update your kubeconfig path

*** Test Cases ***
List All Namespaces and Pod Statuses
    [Documentation]    List all namespaces and check all pods in each namespace
    ${namespaces}    List Namespaces
    FOR    ${namespace}    IN    @{namespaces}
        Log    Checking namespace: ${namespace}
        ${pods}    List Pods In Namespace    ${namespace}
        FOR    ${pod}    IN    @{pods}
            ${status}    Get Pod Status    ${pod}    ${namespace}
            Log    Pod: ${pod} | Status: ${status}
        END
    END

*** Keywords ***
List Namespaces
    [Documentation]    Returns a list of all namespaces in the cluster
    ${namespaces}    Get Namespaces
    RETURN    ${namespaces}

List Pods In Namespace
    [Arguments]    ${namespace}
    [Documentation]    Returns a list of all pods in a specific namespace
    ${pods}    Get Pods In Namespace    ${namespace}
    RETURN    ${pods}

Get Pod Status
    [Arguments]    ${pod}    ${namespace}
    [Documentation]    Returns the status of a given pod
    ${status}    Get Pod Status    ${pod}    ${namespace}
    RETURN    ${status}


*** Settings ***
Library    KubeLibrary

*** Test Cases ***
Check All Pods Running
    [Documentation]    Verify all pods in all namespaces are in Running state
    ${pods}    List Pods    all-namespaces=True
    ${failures}    Set Variable    0
    
    FOR    ${pod}    IN    @{pods}
        ${status}    Get From Dictionary    ${pod}    status.phase
        Run Keyword If    '${status}' != 'Running'    Set Variable    ${failures}    ${failures + 1}
    END

    Should Be Equal As Integers    ${failures}    0    All pods should be in Running state


